n_min = 10
n_step = 10
n0 = 2
SuccessProbs_List = matrix(data = c(
0.4, 0.8, 0.3, 0.1,
0.4, 0.6, 0.35, 0.25,
0.45, 0.35, 0.3,0.5,
0.5, 0.5, 0.3, 0.3,
0.4, 0.4, 0.4, 0.4), nrow = 5, ncol = 4, byrow = TRUE)
params = data.frame(c_gamma = 3,temp = 5,eps = 0.1)
numCores <- parallel::detectCores() # Requires library(parallel)
print(numCores)
cl = makeCluster(numCores)
registerDoParallel(cl)
#for (h in 1:(dim(SuccessProbs_List)[1])) {
for (h in 1) {
SuccessProbs = matrix(SuccessProbs_List[h,], nrow = 2, ncol = 2, byrow = FALSE)
for(g in 1:runRepeats){
start_time <- Sys.time()
resultsCombined = foreach(k = 1:runSize, .combine = rbind) %dopar% {
res = runSims_T2(k,  n_max, n_min, n_step, n0, SuccessProbs, params, GI)
return(res)
}
end_time <- Sys.time()
#g2 = 20+g
write.csv(resultsCombined, file = paste("C:/Users/richa/Desktop/Thesis/ReRuns_Test/Scenario",h ,"_T2_Run",g2,"_",format(Sys.time(), "%Y%m%d"),".csv", sep = ""))
print(end_time - start_time)
}
}
#g2 = 20+g
write.csv(resultsCombined, file = paste("C:/Users/richa/Desktop/Thesis/ReRuns_Test/Scenario",h ,"_T2_Run",g,"_",format(Sys.time(), "%Y%m%d"),".csv", sep = ""))
setwd("C:/Users/richa/Desktop/Thesis/ReRuns_Test")
setwd("C:/Users/richa/Desktop/Thesis/ReRuns_Test")
files_T2 = list.files(pattern = ".*T2.*csv")
start_time =  Sys.time()
df_T2 = do.call(rbind, lapply(files_T2, fread))
end_time =  Sys.time()
print(end_time - start_time)
# Scenario 1 analysis
df2_T2 = df_T2[df_T2$Success_Probabilities == "c(0.4, 0.8, 0.3, 0.1)"]
df2_T5 = df2_T2
df2_T2$Perc_A = df2_T2$Allocation_TreatmentA/df2_T2$Sample_size
df2_T2$Power = 1*(df2_T2$ChiSq_pvalue<=0.05)
df2_T5$Perc_A = df2_T5$Allocation_TreatmentA/df2_T5$Sample_size
df2_T5$Power = 1*(df2_T5$ChiSq_pvalue<=0.05)
df2_T2$Perc_A = df2_T2$Allocation_TreatmentA/df2_T2$Sample_size
df2_T2$Power = 1*(df2_T2$ChiSq_pvalue<=0.05)
df2_T5$Perc_A = df2_T5$Allocation_TreatmentA/df2_T5$Sample_size
df2_T5$Power = 1*(df2_T5$ChiSq_pvalue<=0.05)
ggplot(data = df2_T2[df2_T2$Model == "RA_DBCD_RSIHR" & df2_T2$Sample_size %% 100 == 0,], aes(as.factor(Sample_size), Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Sample size") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart1_violins_percA_by_sample_size_RA_DBCD_RSIHR_t2_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T2[df2_T2$Model == "RA_DBCD_RSIHR" & df2_T2$Sample_size <= 100,], aes(as.factor(Sample_size), Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Sample size") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart1_alt_violins_percA_by_sample_size_RA_DBCD_RSIHR_t2_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T5[df2_T5$Model == "RA_DBCD_RSIHR" & df2_T2$Sample_size %% 100 == 0,], aes(as.factor(Sample_size), Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Sample size") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart1a_violins_percA_by_sample_size_RA_DBCD_RSIHR_t5_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T5[df2_T5$Model == "RA_DBCD_RSIHR" & df2_T5$Sample_size<= 100,], aes(as.factor(Sample_size), Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Sample size") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart1a_alt_violins_percA_by_sample_size_RA_DBCD_RSIHR_t5_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T2[df2_T2$Sample_size == 100,], aes(Model, Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart2_violins_percA_n100_t2_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T2[df2_T2$Sample_size == 1000,], aes(Model, Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart3_violins_percA_n1000_t2_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T5[df2_T5$Sample_size == 100,], aes(Model, Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart4_violins_percA_n100_t5_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T5[df2_T5$Sample_size == 1000,], aes(Model, Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart5_violins_percA_n1000_t5_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
n_s = unique(df2_T2$Sample_Size)
models = unique(df2_T2$Model)
df_summary_T2 <- df2_T2 %>% group_by(Model, Sample_size) %>% summarise(averageSuccessProportion = mean(Successes_total/Sample_size), varSuccessProportion = var(Successes_total/Sample_size), averageAllocatedA = mean(Perc_A), VarAllocatedA = var(Perc_A), averagePower = mean(Power), varPower = var(Power), Z0_avg_all_A = mean(Z0_Allocation_TreatmentA/Sample_size), Z0_avg_successes_A = mean(Z0_Successes_TreatmentA/Sample_size), Z0_avg_successes_B = mean(Z0_Successes_TreatmentB/Sample_size))
df_summary_T2
n_s = unique(df2_T5$Sample_Size)
models = unique(df2_T5$Model)
df_summary_T5 = data.frame(Sample_size = integer(), Model = character() , averageSuccessProportion = numeric(), varianceSuccessProportion = numeric(), averageAllocatedA = numeric(), varianceAllocatedA = numeric(), averagePower= numeric() )
df_summary_T5 <- df2_T5 %>% group_by(Model, Sample_size) %>% summarise(averageSuccessProportion = mean(Successes_total/Sample_size), varSuccessProportion = var(Successes_total/Sample_size), averageAllocatedA = mean(Perc_A/Sample_size), VarAllocatedA = var(Perc_A/Sample_size), averagePower = mean(Power), varPower = var(Power))
df_summary_T5
RosenbergerModels = c("RA_Known_Rosenberger", "CARA_Known_Rosenberger", "RA_Estimated_Rosenberger", "CARA_Estimated_Rosenberger", "RA_DBCD_Rosenberger", "CARA_DBCD_Rosenberger")
ggplot(data =  df_summary_T2[(df_summary_T2$Model %in% RosenbergerModels) & df_summary_T2$Sample_size <=250,], aes(Sample_size, varSuccessProportion, color = Model)) +geom_line()+xlab("Sample size") + ylab("Variance of success proportion") + theme(legend.position="bottom")+ xlim(0, 250)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart7_line_varSuccessProp_t2_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df_summary_T5, aes(Sample_size, averageSuccessProportion, color = Model)) +geom_line()+xlab("Sample size") + ylab("Total success proprtion average")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart8_line_avgSuccessProp_t5_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 20, units = "cm")
ggplot(data = df_summary_T2[df_summary_T2$Sample_size <= 1000,], aes(Sample_size, averageSuccessProportion, color = Model)) +geom_line()+xlab("Sample size") + ylab("Total success proprtion average")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart8_alt_line_avgSuccessProp_t5_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 20, units = "cm")
ggplot(data = df_summary_T2, aes(Sample_size, averageSuccessProportion, color = Model)) +geom_line()+xlab("Sample size") + ylab("Total success proprtion average")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart8b_line_avgSuccessProp_t2_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 20, units = "cm")
NeymanModels = c("RA_Known_Neyman", "CARA_Known_Neyman", "RA_Estimated_Neyman", "CARA_Estimated_Neyman", "RA_DBCD_Neyman", "CARA_DBCD_Neyman")
ggplot(data = df_summary_T2[df_summary_T2$Model %in% NeymanModels,], aes(Sample_size, averageSuccessProportion, color = Model)) +geom_line()+xlab("Sample size") + ylab("Total success proprtion average")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart8b_line_avgSuccessProp_t2_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 20, units = "cm")
NeymanModels = c("RA_Known_Neyman", "CARA_Known_Neyman", "RA_Estimated_Neyman", "CARA_Estimated_Neyman", "RA_DBCD_Neyman", "CARA_DBCD_Neyman")
ggplot(data = df_summary_T5[df_summary_T5$Model %in% NeymanModels,], aes(Sample_size, averageSuccessProportion, color = Model)) +geom_line()+xlab("Sample size") + ylab("Total success proprtion average")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart8b_line_avgSuccessProp_t2_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 20, units = "cm")
NeymanModels = c("RA_Known_Neyman", "CARA_Known_Neyman", "RA_Estimated_Neyman", "CARA_Estimated_Neyman", "RA_DBCD_Neyman", "CARA_DBCD_Neyman")
ggplot(data = df_summary_T2[df_summary_T2$Model %in% NeymanModels,], aes(Sample_size, averageAllocatedA, color = Model)) +geom_line()+xlab("Sample size") + ylab("Total success proprtion average")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart8b_line_avgSuccessProp_t2_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 20, units = "cm")
NeymanModels = c("RA_Known_Neyman", "CARA_Known_Neyman", "RA_Estimated_Neyman", "CARA_Estimated_Neyman", "RA_DBCD_Neyman", "CARA_DBCD_Neyman")
ggplot(data = df_summary_T2[df_summary_T2$Model %in% NeymanModels,], aes(Sample_size, Z0_avg_all_A, color = Model)) +geom_line()+xlab("Sample size") + ylab("Total success proprtion average")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart8b_line_avgSuccessProp_t2_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 20, units = "cm")
NeymanModels = c("RA_Known_Neyman", "CARA_Known_Neyman", "RA_Estimated_Neyman", "CARA_Estimated_Neyman", "RA_DBCD_Neyman", "CARA_DBCD_Neyman")
ggplot(data = df_summary_T2[df_summary_T2$Model %in% NeymanModels,], aes(Sample_size, Z0_avg_successes_B, color = Model)) +geom_line()+xlab("Sample size") + ylab("Total success proprtion average")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart8b_line_avgSuccessProp_t2_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 20, units = "cm")
OptimallyAdjustedModels = c("RA_Known_OptimallyAdjusted", "CARA_Known_OptimallyAdjusted", "RA_Estimated_OptimallyAdjusted", "CARA_Estimated_OptimallyAdjusted", "RA_DBCD_OptimallyAdjusted", "CARA_DBCD_OptimallyAdjusted")
ggplot(data = df_summary_T2[df_summary_T2$Model %in% OptimallyAdjustedModels,], aes(Sample_size, averageSuccessProportion, color = Model)) +geom_line()+xlab("Sample size") + ylab("Total success proprtion average")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart8e_line_avgSuccessProp_t2_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 20, units = "cm")
NeymanModels = c("RA_Known_Neyman", "CARA_Known_Neyman", "RA_Estimated_Neyman", "CARA_Estimated_Neyman", "RA_DBCD_Neyman", "CARA_DBCD_Neyman")
ggplot(data = df2_T5[apply(bind_cols(df2_T5$Sample_size == 50, (df2_T5$Model %in% NeymanModels)), 1, all),], aes(Model, Successes_total/Sample_size), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("Total success proportion")+ scale_y_continuous(labels = scales::percent)
capture.output(ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart9_violins_SuccessNeymanComparison_n100_t2_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 15, units = "cm"))
RSIHRModels = c("RA_Known_RSIHR", "CARA_Known_RSIHR", "RA_Estimated_RSIHR", "CARA_Estimated_RSIHR", "RA_DBCD_RSIHR", "CARA_DBCD_RSIHR")
ggplot(data = df2_T5[apply(bind_cols(df2_T5$Sample_size == 100, (df2_T5$Model %in% RSIHRModels)), 1, all),], aes(Model, Successes_total/Sample_size), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("Total success proportion")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart10_violins_SuccessRSIHRComparison_n50_t2_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
RosenbergerModels = c("RA_Known_Rosenberger", "CARA_Known_Rosenberger", "RA_Estimated_Rosenberger", "CARA_Estimated_Rosenberger", "RA_DBCD_Rosenberger", "CARA_DBCD_Rosenberger")
ggplot(data = df2_T5[apply(bind_cols(df2_T5$Sample_size == 100, (df2_T5$Model %in% RosenbergerModels)), 1, all),], aes(Model, Successes_total/Sample_size), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("Total success proportion")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart11_violins_SuccessRosenbergerComparison_n100_t2_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
NeymanModels = c("RA_Known_Neyman", "CARA_Known_Neyman", "RA_Estimated_Neyman", "CARA_Estimated_Neyman", "RA_DBCD_Neyman", "CARA_DBCD_Neyman")
ggplot(data = df2_T5[apply(bind_cols(df2_T5$Sample_size == 100, (df2_T5$Model %in% NeymanModels)), 1, all),], aes(Model, Successes_total/Sample_size), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("Total success proportion")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart12_violins_SuccessNeymanComparison_n100_t2_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T2[df2_T2$Sample_size == 100,], aes(Model, Successes_total/Sample_size), width = 2000) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("Total success proprtion")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart13_violins_successes_n100_t2_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T2[df2_T2$Sample_size == 1000,], aes(Model, Successes_total/Sample_size), width = 2000) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("Total success proprtion")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart14_violins_successes_n1000_t2_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T5[df2_T5$Sample_size == 100,], aes(Model, Successes_total/Sample_size), width = 2000) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("Total success proprtion")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart15_violins_successes_n100_t_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T5[df2_T5$Sample_size == 1000,], aes(Model, Successes_total/Sample_size), width = 2000) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("Total success proprtion")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart16_violins_successes_n1000_t5_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
df2_T5_Perc_A = df2_T5 %>% select(Model, Sample_size, Allocation_TreatmentA, Allocation_TreatmentB, Allocation_TreatmentC, Allocation_TreatmentD, Allocation_TreatmentE)
3*5*44/60
library(stringr)
library(foreach)
library(parallel)
library(iterators)
library(doParallel)
library(fastDummies)
library(lmtest)
library(zoo)
getwd()
# Helper files
source("./Helpers/successCount.R")
source("./Helpers/successTreatmentCount.R")
source("./Helpers/Initialise_RR.R")
source("./Helpers/InitialiseWCovariates_RR.R")
source("./Helpers/ChiSq_calc.R")
source("./Helpers/LR_test_calc.R")
source("./Helpers/DBCD_G_Multi_Function.R")
source("./Models/1_ResponseAdaptive.r")
source("./Models/2_CARA.r")
source("./Models/3_MLMethods.R")
source("./Models/4_GittinsIndex.R")
GI = readRDS("C:/Users/richa/Desktop/Thesis/Code/thesis/FinalModel/Helpers/GittinsMatrix.rds")
source("./RunModelFunctions_T2.R")
runSize = 80 # How often we save results to file
runRepeats = 3 # Number of times we repeat runSize
n_max = 1000 # Total sample size calculated
n_min = 10
n_step = 10
n0 = 2
SuccessProbs_List = matrix(data = c(
0.4, 0.8, 0.3, 0.1,
0.4, 0.6, 0.35, 0.25,
0.45, 0.35, 0.3,0.5,
0.5, 0.5, 0.3, 0.3,
0.4, 0.4, 0.4, 0.4), nrow = 5, ncol = 4, byrow = TRUE)
params = data.frame(c_gamma = 3,temp = 5,eps = 0.1)
numCores <- parallel::detectCores() # Requires library(parallel)
print(numCores)
cl = makeCluster(numCores)
registerDoParallel(cl)
for (h in 1:(dim(SuccessProbs_List)[1])) {
#for (h in 1) {
SuccessProbs = matrix(SuccessProbs_List[h,], nrow = 2, ncol = 2, byrow = FALSE)
for(g in 1:runRepeats){
start_time <- Sys.time()
resultsCombined = foreach(k = 1:runSize, .combine = rbind) %dopar% {
res = runSims_T2(k,  n_max, n_min, n_step, n0, SuccessProbs, params, GI)
return(res)
}
end_time <- Sys.time()
#g2 = 20+g
write.csv(resultsCombined, file = paste("C:/Users/richa/Desktop/Thesis/Results/Scenario",h ,"_T2_Run",g,"_",format(Sys.time(), "%Y%m%d"),".csv", sep = ""))
print(end_time - start_time)
}
}
stopCluster(cl)
library(dplyr)
library(ggplot2)
library(tibble)
library(foreach)
library(parallel)
library(iterators)
library(doParallel)
library(tidyverse)
library(data.table)
setwd("C:/Users/richa/Desktop/Thesis/Results")
files_T2 = list.files(pattern = ".*T2.*csv")
start_time =  Sys.time()
df_T2 = do.call(rbind, lapply(files_T2, fread))
end_time =  Sys.time()
print(end_time - start_time)
# Scenario 1 analysis
df2_T2 = df_T2[df_T2$Success_Probabilities == "c(0.4, 0.8, 0.3, 0.1)"]
df2_T5 = df2_T2
df2_T2$Perc_A = df2_T2$Allocation_TreatmentA/df2_T2$Sample_size
df2_T2$Power = 1*(df2_T2$ChiSq_pvalue<=0.05)
df2_T5$Perc_A = df2_T5$Allocation_TreatmentA/df2_T5$Sample_size
df2_T5$Power = 1*(df2_T5$ChiSq_pvalue<=0.05)
ggplot(data = df2_T2[df2_T2$Model == "RA_DBCD_RSIHR" & df2_T2$Sample_size %% 100 == 0,], aes(as.factor(Sample_size), Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Sample size") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/ReRunImages/Chart1_violins_percA_by_sample_size_RA_DBCD_RSIHR_t2_",format(Sys.time(), "%Y%m%d"),".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T2[df2_T2$Model == "RA_DBCD_RSIHR" & df2_T2$Sample_size %% 100 == 0,], aes(as.factor(Sample_size), Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Sample size") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart1_violins_percA_by_sample_size_RA_DBCD_RSIHR_t2_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T2[df2_T2$Model == "RA_DBCD_RSIHR" & df2_T2$Sample_size %% 100 == 0,], aes(as.factor(Sample_size), Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Sample size") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart1_violins_percA_by_sample_size_RA_DBCD_RSIHR_t2_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T2[df2_T2$Model == "RA_DBCD_RSIHR" & df2_T2$Sample_size <= 100,], aes(as.factor(Sample_size), Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Sample size") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart1_alt_violins_percA_by_sample_size_RA_DBCD_RSIHR_t2_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T2[df2_T2$Model == "RA_DBCD_RSIHR" & df2_T2$Sample_size %% 100 == 0,], aes(as.factor(Sample_size), Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Sample size") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart1_violins_percA_by_sample_size_RA_DBCD_RSIHR_t2_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T2[df2_T2$Model == "RA_DBCD_RSIHR" & df2_T2$Sample_size <= 100,], aes(as.factor(Sample_size), Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Sample size") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart1_alt_violins_percA_by_sample_size_RA_DBCD_RSIHR_t2_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T5[df2_T5$Model == "RA_DBCD_RSIHR" & df2_T2$Sample_size %% 100 == 0,], aes(as.factor(Sample_size), Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Sample size") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart1a_violins_percA_by_sample_size_RA_DBCD_RSIHR_t5_"),".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T5[df2_T5$Model == "RA_DBCD_RSIHR" & df2_T2$Sample_size %% 100 == 0,], aes(as.factor(Sample_size), Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Sample size") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart1a_violins_percA_by_sample_size_RA_DBCD_RSIHR_t5_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T5[df2_T5$Model == "RA_DBCD_RSIHR" & df2_T5$Sample_size<= 100,], aes(as.factor(Sample_size), Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Sample size") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart1a_alt_violins_percA_by_sample_size_RA_DBCD_RSIHR_t5_"\,".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T2[df2_T2$Model == "RA_DBCD_RSIHR" & df2_T2$Sample_size %% 100 == 0,], aes(as.factor(Sample_size), Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Sample size") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart1_violins_percA_by_sample_size_RA_DBCD_RSIHR_t2_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T2[df2_T2$Model == "RA_DBCD_RSIHR" & df2_T2$Sample_size <= 100,], aes(as.factor(Sample_size), Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Sample size") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart1_alt_violins_percA_by_sample_size_RA_DBCD_RSIHR_t2_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T5[df2_T5$Model == "RA_DBCD_RSIHR" & df2_T2$Sample_size %% 100 == 0,], aes(as.factor(Sample_size), Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Sample size") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart1a_violins_percA_by_sample_size_RA_DBCD_RSIHR_t5_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T5[df2_T5$Model == "RA_DBCD_RSIHR" & df2_T5$Sample_size<= 100,], aes(as.factor(Sample_size), Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Sample size") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart1a_alt_violins_percA_by_sample_size_RA_DBCD_RSIHR_t5_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T2[df2_T2$Sample_size == 100,], aes(Model, Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart2_violins_percA_n100_t2_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T2[df2_T2$Sample_size == 1000,], aes(Model, Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart3_violins_percA_n1000_t2_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T5[df2_T5$Sample_size == 100,], aes(Model, Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart4_violins_percA_n100_t5_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T5[df2_T5$Sample_size == 1000,], aes(Model, Perc_A), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("% allocated to treatment A")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart5_violins_percA_n1000_t5_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
n_s = unique(df2_T2$Sample_Size)
models = unique(df2_T2$Model)
df_summary_T2 <- df2_T2 %>% group_by(Model, Sample_size) %>% summarise(averageSuccessProportion = mean(Successes_total/Sample_size), varSuccessProportion = var(Successes_total/Sample_size), averageAllocatedA = mean(Perc_A), VarAllocatedA = var(Perc_A), averagePower = mean(Power), varPower = var(Power), Z0_avg_all_A = mean(Z0_Allocation_TreatmentA/Sample_size), Z0_avg_successes_A = mean(Z0_Successes_TreatmentA/Sample_size), Z0_avg_successes_B = mean(Z0_Successes_TreatmentB/Sample_size))
df_summary_T2
n_s = unique(df2_T5$Sample_Size)
models = unique(df2_T5$Model)
df_summary_T5 = data.frame(Sample_size = integer(), Model = character() , averageSuccessProportion = numeric(), varianceSuccessProportion = numeric(), averageAllocatedA = numeric(), varianceAllocatedA = numeric(), averagePower= numeric() )
df_summary_T5 <- df2_T5 %>% group_by(Model, Sample_size) %>% summarise(averageSuccessProportion = mean(Successes_total/Sample_size), varSuccessProportion = var(Successes_total/Sample_size), averageAllocatedA = mean(Perc_A/Sample_size), VarAllocatedA = var(Perc_A/Sample_size), averagePower = mean(Power), varPower = var(Power))
df_summary_T5
RosenbergerModels = c("RA_Known_Rosenberger", "CARA_Known_Rosenberger", "RA_Estimated_Rosenberger", "CARA_Estimated_Rosenberger", "RA_DBCD_Rosenberger", "CARA_DBCD_Rosenberger")
ggplot(data =  df_summary_T2[(df_summary_T2$Model %in% RosenbergerModels) & df_summary_T2$Sample_size <=250,], aes(Sample_size, varSuccessProportion, color = Model)) +geom_line()+xlab("Sample size") + ylab("Variance of success proportion") + theme(legend.position="bottom")+ xlim(0, 250)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart7_line_varSuccessProp_t2_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df_summary_T5, aes(Sample_size, averageSuccessProportion, color = Model)) +geom_line()+xlab("Sample size") + ylab("Total success proprtion average")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart8_line_avgSuccessProp_t5_",".pdf", sep = ""), device = "pdf", width = 20, units = "cm")
ggplot(data = df_summary_T2[df_summary_T2$Sample_size <= 1000,], aes(Sample_size, averageSuccessProportion, color = Model)) +geom_line()+xlab("Sample size") + ylab("Total success proprtion average")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart8_alt_line_avgSuccessProp_t5_",".pdf", sep = ""), device = "pdf", width = 20, units = "cm")
ggplot(data = df_summary_T2, aes(Sample_size, averageSuccessProportion, color = Model)) +geom_line()+xlab("Sample size") + ylab("Total success proprtion average")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart8b_line_avgSuccessProp_t2_",".pdf", sep = ""), device = "pdf", width = 20, units = "cm")
NeymanModels = c("RA_Known_Neyman", "CARA_Known_Neyman", "RA_Estimated_Neyman", "CARA_Estimated_Neyman", "RA_DBCD_Neyman", "CARA_DBCD_Neyman")
ggplot(data = df_summary_T2[df_summary_T2$Model %in% NeymanModels,], aes(Sample_size, averageSuccessProportion, color = Model)) +geom_line()+xlab("Sample size") + ylab("Total success proprtion average")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart8b_line_avgSuccessProp_t2_",".pdf", sep = ""), device = "pdf", width = 20, units = "cm")
NeymanModels = c("RA_Known_Neyman", "CARA_Known_Neyman", "RA_Estimated_Neyman", "CARA_Estimated_Neyman", "RA_DBCD_Neyman", "CARA_DBCD_Neyman")
ggplot(data = df_summary_T5[df_summary_T5$Model %in% NeymanModels,], aes(Sample_size, averageSuccessProportion, color = Model)) +geom_line()+xlab("Sample size") + ylab("Total success proprtion average")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart8b_line_avgSuccessProp_t2_",".pdf", sep = ""), device = "pdf", width = 20, units = "cm")
NeymanModels = c("RA_Known_Neyman", "CARA_Known_Neyman", "RA_Estimated_Neyman", "CARA_Estimated_Neyman", "RA_DBCD_Neyman", "CARA_DBCD_Neyman")
ggplot(data = df_summary_T2[df_summary_T2$Model %in% NeymanModels,], aes(Sample_size, averageAllocatedA, color = Model)) +geom_line()+xlab("Sample size") + ylab("Total success proprtion average")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart8b_line_avgSuccessProp_t2_",".pdf", sep = ""), device = "pdf", width = 20, units = "cm")
NeymanModels = c("RA_Known_Neyman", "CARA_Known_Neyman", "RA_Estimated_Neyman", "CARA_Estimated_Neyman", "RA_DBCD_Neyman", "CARA_DBCD_Neyman")
ggplot(data = df_summary_T2[df_summary_T2$Model %in% NeymanModels,], aes(Sample_size, Z0_avg_all_A, color = Model)) +geom_line()+xlab("Sample size") + ylab("Total success proprtion average")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart8b_line_avgSuccessProp_t2_",".pdf", sep = ""), device = "pdf", width = 20, units = "cm")
NeymanModels = c("RA_Known_Neyman", "CARA_Known_Neyman", "RA_Estimated_Neyman", "CARA_Estimated_Neyman", "RA_DBCD_Neyman", "CARA_DBCD_Neyman")
ggplot(data = df_summary_T2[df_summary_T2$Model %in% NeymanModels,], aes(Sample_size, Z0_avg_successes_B, color = Model)) +geom_line()+xlab("Sample size") + ylab("Total success proprtion average")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart8b_line_avgSuccessProp_t2_",".pdf", sep = ""), device = "pdf", width = 20, units = "cm")
OptimallyAdjustedModels = c("RA_Known_OptimallyAdjusted", "CARA_Known_OptimallyAdjusted", "RA_Estimated_OptimallyAdjusted", "CARA_Estimated_OptimallyAdjusted", "RA_DBCD_OptimallyAdjusted", "CARA_DBCD_OptimallyAdjusted")
ggplot(data = df_summary_T2[df_summary_T2$Model %in% OptimallyAdjustedModels,], aes(Sample_size, averageSuccessProportion, color = Model)) +geom_line()+xlab("Sample size") + ylab("Total success proprtion average")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart8e_line_avgSuccessProp_t2_",".pdf", sep = ""), device = "pdf", width = 20, units = "cm")
NeymanModels = c("RA_Known_Neyman", "CARA_Known_Neyman", "RA_Estimated_Neyman", "CARA_Estimated_Neyman", "RA_DBCD_Neyman", "CARA_DBCD_Neyman")
ggplot(data = df2_T5[apply(bind_cols(df2_T5$Sample_size == 50, (df2_T5$Model %in% NeymanModels)), 1, all),], aes(Model, Successes_total/Sample_size), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("Total success proportion")+ scale_y_continuous(labels = scales::percent)
capture.output(ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart9_violins_SuccessNeymanComparison_n100_t2_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm"))
RSIHRModels = c("RA_Known_RSIHR", "CARA_Known_RSIHR", "RA_Estimated_RSIHR", "CARA_Estimated_RSIHR", "RA_DBCD_RSIHR", "CARA_DBCD_RSIHR")
ggplot(data = df2_T5[apply(bind_cols(df2_T5$Sample_size == 100, (df2_T5$Model %in% RSIHRModels)), 1, all),], aes(Model, Successes_total/Sample_size), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("Total success proportion")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart10_violins_SuccessRSIHRComparison_n50_t2_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
RosenbergerModels = c("RA_Known_Rosenberger", "CARA_Known_Rosenberger", "RA_Estimated_Rosenberger", "CARA_Estimated_Rosenberger", "RA_DBCD_Rosenberger", "CARA_DBCD_Rosenberger")
ggplot(data = df2_T5[apply(bind_cols(df2_T5$Sample_size == 100, (df2_T5$Model %in% RosenbergerModels)), 1, all),], aes(Model, Successes_total/Sample_size), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("Total success proportion")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart11_violins_SuccessRosenbergerComparison_n100_t2_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
NeymanModels = c("RA_Known_Neyman", "CARA_Known_Neyman", "RA_Estimated_Neyman", "CARA_Estimated_Neyman", "RA_DBCD_Neyman", "CARA_DBCD_Neyman")
ggplot(data = df2_T5[apply(bind_cols(df2_T5$Sample_size == 100, (df2_T5$Model %in% NeymanModels)), 1, all),], aes(Model, Successes_total/Sample_size), width = 200) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("Total success proportion")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart12_violins_SuccessNeymanComparison_n100_t2_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T2[df2_T2$Sample_size == 100,], aes(Model, Successes_total/Sample_size), width = 2000) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("Total success proprtion")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart13_violins_successes_n100_t2_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T2[df2_T2$Sample_size == 1000,], aes(Model, Successes_total/Sample_size), width = 2000) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("Total success proprtion")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart14_violins_successes_n1000_t2_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T5[df2_T5$Sample_size == 100,], aes(Model, Successes_total/Sample_size), width = 2000) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("Total success proprtion")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart15_violins_successes_n100_t_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
ggplot(data = df2_T5[df2_T5$Sample_size == 1000,], aes(Model, Successes_total/Sample_size), width = 2000) + geom_violin(scale = "area") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+xlab("Model") + ylab("Total success proprtion")+ scale_y_continuous(labels = scales::percent)
ggsave(paste("C:/Users/richa/Desktop/Thesis/Images/Chart16_violins_successes_n1000_t5_",".pdf", sep = ""), device = "pdf", width = 15, units = "cm")
df2_T5_Perc_A = df2_T5 %>% select(Model, Sample_size, Allocation_TreatmentA, Allocation_TreatmentB, Allocation_TreatmentC, Allocation_TreatmentD, Allocation_TreatmentE)
library(stringr)
library(foreach)
library(parallel)
library(iterators)
library(doParallel)
library(fastDummies)
library(lmtest)
library(zoo)
# Helper files
source("./Helpers/successCount.R")
source("./Helpers/successTreatmentCount.R")
source("./Helpers/Initialise_RR.R")
source("./Helpers/InitialiseWCovariates_RR.R")
source("./Helpers/ChiSq_calc.R")
source("./Helpers/LR_test_calc.R")
source("./Helpers/DBCD_G_Multi_Function.R")
source("./Models/1_ResponseAdaptive.r")
source("./Models/2_CARA.r")
source("./Models/3_MLMethods.R")
source("./Models/4_GittinsIndex.R")
GI = readRDS("C:/Users/richa/Desktop/Thesis/Code/thesis/FinalModel/Helpers/GittinsMatrix.rds")
source("./RunModelFunctions_T5.R")
runSize = 80 # How often we save results to file
runRepeats = 7 # Number of times we repeat runSize
n_max = 1000 # Total sample size calculated
n_min = 10
n_step = 10
n0 = 2
SuccessProbs_List = matrix(data = c(
0.8,	0.4,	0.1,	0.3,	0.2,	0.6,	0.9,	0.7,	0.7,	0.3,
0.8,	0.2,	0.25,	0.35,	0.4,  0.4,	0.45, 0.25,	0.35,	0.55,
0.5,	0.3,	0.3,	0.5,	0.45,	0.35,	0.35,	0.45,	0.6,	0.2,
0.5,	0.5,	0.3,	0.3,	0.4,	0.4,  0.35,	0.35,	0.45,	0.45,
0.4,	0.4,	0.4,	0.4,	0.4,	0.4,	0.4,	0.4,	0.4,	0.4
), nrow = 5, ncol = 10, byrow = TRUE)
params = data.frame(c_gamma = 3,temp = 5,eps = 0.1)
numCores <- parallel::detectCores() # Requires library(parallel)
print(numCores)
cl = makeCluster(numCores)
registerDoParallel(cl)
for (h in 1:(dim(SuccessProbs_List)[1])) {
SuccessProbs = matrix(SuccessProbs_List[h,], nrow = 2, ncol = 5, byrow = FALSE)
for(g in 1:runRepeats){
start_time <- Sys.time()
resultsCombined = foreach(k = 1:runSize, .combine = rbind) %dopar% {
res = runSims_T5(k,  n_max, n_min, n_step, n0, SuccessProbs, params, GI)
return(res)
}
end_time <- Sys.time()
write.csv(resultsCombined, file = paste("C:/Users/richa/Desktop/Thesis/Results/Scenario",h,"a_T5_Run",g,"_",format(Sys.time(), "%Y%m%d"),".csv", sep = ""))
print(end_time-start_time)
}
}
library(stringr)
library(foreach)
library(parallel)
library(iterators)
library(doParallel)
library(fastDummies)
library(lmtest)
library(zoo)
getwd()
# Helper files
source("./Helpers/successCount.R")
source("./Helpers/successTreatmentCount.R")
source("./Helpers/Initialise_RR.R")
source("./Helpers/InitialiseWCovariates_RR.R")
source("./Helpers/ChiSq_calc.R")
source("./Helpers/LR_test_calc.R")
source("./Helpers/DBCD_G_Multi_Function.R")
source("./Models/1_ResponseAdaptive.r")
source("./Models/2_CARA.r")
source("./Models/3_MLMethods.R")
source("./Models/4_GittinsIndex.R")
GI = readRDS("C:/Users/richa/Desktop/Thesis/Code/thesis/FinalModel/Helpers/GittinsMatrix.rds")
source("./RunModelFunctions_T2.R")
runSize = 80 # How often we save results to file
runRepeats = 10 # Number of times we repeat runSize
n_max = 1000 # Total sample size calculated
n_min = 10
n_step = 10
n0 = 2
SuccessProbs_List = matrix(data = c(
0.4, 0.8, 0.3, 0.1,
0.4, 0.6, 0.35, 0.25,
0.45, 0.35, 0.3,0.5,
0.5, 0.5, 0.3, 0.3,
0.4, 0.4, 0.4, 0.4), nrow = 5, ncol = 4, byrow = TRUE)
params = data.frame(c_gamma = 3,temp = 5,eps = 0.1)
numCores <- parallel::detectCores() # Requires library(parallel)
print(numCores)
cl = makeCluster(numCores)
registerDoParallel(cl)
for (h in 1:(dim(SuccessProbs_List)[1])) {
#for (h in 1) {
SuccessProbs = matrix(SuccessProbs_List[h,], nrow = 2, ncol = 2, byrow = FALSE)
for(g in 1:runRepeats){
start_time <- Sys.time()
resultsCombined = foreach(k = 1:runSize, .combine = rbind) %dopar% {
res = runSims_T2(k,  n_max, n_min, n_step, n0, SuccessProbs, params, GI)
return(res)
}
end_time <- Sys.time()
#g2 = 20+g
write.csv(resultsCombined, file = paste("C:/Users/richa/Desktop/Thesis/Results/Scenario",h ,"_T2_Run",g,"_",format(Sys.time(), "%Y%m%d"),".csv", sep = ""))
print(end_time - start_time)
}
}
stopCluster(cl)
library(stringr)
library(foreach)
library(parallel)
library(iterators)
library(doParallel)
library(fastDummies)
library(lmtest)
library(zoo)
# Helper files
source("./Helpers/successCount.R")
source("./Helpers/successTreatmentCount.R")
source("./Helpers/Initialise_RR.R")
source("./Helpers/InitialiseWCovariates_RR.R")
source("./Helpers/ChiSq_calc.R")
source("./Helpers/LR_test_calc.R")
source("./Helpers/DBCD_G_Multi_Function.R")
source("./Models/1_ResponseAdaptive.r")
source("./Models/2_CARA.r")
source("./Models/3_MLMethods.R")
source("./Models/4_GittinsIndex.R")
GI = readRDS("C:/Users/richa/Desktop/Thesis/Code/thesis/FinalModel/Helpers/GittinsMatrix.rds")
source("./RunModelFunctions_T5.R")
runSize = 80 # How often we save results to file
runRepeats = 1 # Number of times we repeat runSize
n_max = 1000 # Total sample size calculated
n_min = 10
n_step = 10
n0 = 2
SuccessProbs_List = matrix(data = c(
0.8,	0.4,	0.1,	0.3,	0.2,	0.6,	0.9,	0.7,	0.7,	0.3,
0.8,	0.2,	0.25,	0.35,	0.4,  0.4,	0.45, 0.25,	0.35,	0.55,
0.5,	0.3,	0.3,	0.5,	0.45,	0.35,	0.35,	0.45,	0.6,	0.2,
0.5,	0.5,	0.3,	0.3,	0.4,	0.4,  0.35,	0.35,	0.45,	0.45,
0.4,	0.4,	0.4,	0.4,	0.4,	0.4,	0.4,	0.4,	0.4,	0.4
), nrow = 5, ncol = 10, byrow = TRUE)
params = data.frame(c_gamma = 3,temp = 5,eps = 0.1)
numCores <- parallel::detectCores() # Requires library(parallel)
print(numCores)
cl = makeCluster(numCores)
registerDoParallel(cl)
#for (h in 1:(dim(SuccessProbs_List)[1])) {
for(h in 5){
SuccessProbs = matrix(SuccessProbs_List[h,], nrow = 2, ncol = 5, byrow = FALSE)
for(g in 1:runRepeats){
start_time <- Sys.time()
resultsCombined = foreach(k = 1:runSize, .combine = rbind) %dopar% {
res = runSims_T5(k,  n_max, n_min, n_step, n0, SuccessProbs, params, GI)
return(res)
}
end_time <- Sys.time()
write.csv(resultsCombined, file = paste("C:/Users/richa/Desktop/Thesis/Results/Scenario",h,"a_T5_Run",g,"_",format(Sys.time(), "%Y%m%d"),".csv", sep = ""))
print(end_time-start_time)
}
}
stopCluster(cl)
library(stringr)
library(foreach)
library(parallel)
library(iterators)
library(doParallel)
library(fastDummies)
library(lmtest)
library(zoo)
# Helper files
source("./Helpers/successCount.R")
source("./Helpers/successTreatmentCount.R")
source("./Helpers/Initialise_RR.R")
source("./Helpers/InitialiseWCovariates_RR.R")
source("./Helpers/ChiSq_calc.R")
source("./Helpers/LR_test_calc.R")
source("./Helpers/DBCD_G_Multi_Function.R")
source("./Models/1_ResponseAdaptive.r")
source("./Models/2_CARA.r")
source("./Models/3_MLMethods.R")
source("./Models/4_GittinsIndex.R")
GI = readRDS("C:/Users/richa/Desktop/Thesis/Code/thesis/FinalModel/Helpers/GittinsMatrix.rds")
source("./RunModelFunctions_T5.R")
runSize = 80 # How often we save results to file
runRepeats = 3 # Number of times we repeat runSize
n_max = 1000 # Total sample size calculated
n_min = 10
n_step = 10
n0 = 2
SuccessProbs_List = matrix(data = c(
0.8,	0.4,	0.1,	0.3,	0.2,	0.6,	0.9,	0.7,	0.7,	0.3,
0.8,	0.2,	0.25,	0.35,	0.4,  0.4,	0.45, 0.25,	0.35,	0.55,
0.5,	0.3,	0.3,	0.5,	0.45,	0.35,	0.35,	0.45,	0.6,	0.2,
0.5,	0.5,	0.3,	0.3,	0.4,	0.4,  0.35,	0.35,	0.45,	0.45,
0.4,	0.4,	0.4,	0.4,	0.4,	0.4,	0.4,	0.4,	0.4,	0.4
), nrow = 5, ncol = 10, byrow = TRUE)
params = data.frame(c_gamma = 3,temp = 5,eps = 0.1)
numCores <- parallel::detectCores() # Requires library(parallel)
print(numCores)
cl = makeCluster(numCores)
registerDoParallel(cl)
for (h in 1:(dim(SuccessProbs_List)[1])) {
#for(h in 5){
SuccessProbs = matrix(SuccessProbs_List[h,], nrow = 2, ncol = 5, byrow = FALSE)
for(g in 1:runRepeats){
start_time <- Sys.time()
resultsCombined = foreach(k = 1:runSize, .combine = rbind) %dopar% {
res = runSims_T5(k,  n_max, n_min, n_step, n0, SuccessProbs, params, GI)
return(res)
}
end_time <- Sys.time()
g = g+9
write.csv(resultsCombined, file = paste("C:/Users/richa/Desktop/Thesis/Results/Scenario",h,"a_T5_Run",g,"_",format(Sys.time(), "%Y%m%d"),".csv", sep = ""))
print(end_time-start_time)
}
}
stopCluster(cl)
